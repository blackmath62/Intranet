{% extends 'base.html.twig' %}
{% block title %}
	{{ title }}
{% endblock %}
{% block body %}
<section class="content-header">
<div class="alert alert-info alert-dismissible col-12">
                  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                  <h5><i class="icon fas fa-info-circle"></i> info</h5>
                  Pour déposer une idée d'amélioration, cliquez sur tickets sur la gauche puis sur la barre à droite de Créer un nouveau ticket. </br>
                  Dans le degrés d'urgence, selectionnez boite à idée. </br>
</div>
<div class='d-flex justify-content-between'>
{% if is_granted('ROLE_ADMIN') %}
    <!-- /.col -->
          <div class="col-md-8">
            <div class="card card-primary">
              <div class="card-body p-0">
                <!-- THE CALENDAR -->
                <div id="external-events"></div>
                <div id="calendar"></div>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
          </div>
{% endif %}

<div class="col-md-3 float-right">
<!-- USERS LIST -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Membres</h3>
            <div class="card-tools">
                <span class="badge badge-danger">{{ users|length }} Membres</span>
                <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
            </div>
        </div>
    <!-- /.card-header -->
        <div class="card-body p-0">
            <ul class="users-list clearfix">
                {% for user in users %}
                    <li>
                    <img src="img/profile/{{ user.img }}" alt="User Image">
                    <a class="users-list-name" href="mailto:{{ user.email }}">{{ user.pseudo }}</a>
                        {% for track in tracks %}
                            {% if track.user_id == user.id %}
                                <span class="users-list-date">Derniére visite : </span>
                                <span class="users-list-date">{{ track.createdAt|date("d/m/Y-H:i")}}</span>
                            {% endif %}
                        {% endfor %}
                    </li>
                {% endfor %}              
            </ul>
        </div>
    </div>
</div>
</div>             
</section>
{% endblock %}
{% block javascripts %}
<!-- fullCalendar 2.2.5 -->
<script>
  $(function () {

    /* initialize the external events
     -----------------------------------------------------------------*/
    function ini_events(ele) {
      ele.each(function () {

        // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
        // it doesn't need to have a start or end
        var eventObject = {
          title: $.trim($(this).text()) // use the element's text as the event title
        }

        // store the Event Object in the DOM element so we can get to it later
        $(this).data('eventObject', eventObject)

        // make the event draggable using jQuery UI
        $(this).draggable({
          zIndex        : 1070,
          revert        : true, // will cause the event to go back to its
          revertDuration: 0  //  original position after the drag
        })

      })
    }

    ini_events($('#external-events div.external-event'))

    /* initialize the calendar
     -----------------------------------------------------------------*/
    //Date for the calendar events (dummy data)
    var date = new Date()
    var d    = date.getDate(),
        m    = date.getMonth(),
        y    = date.getFullYear()

    var Calendar = FullCalendar.Calendar;
    var Draggable = FullCalendarInteraction.Draggable;

    var containerEl = document.getElementById('external-events');
    var checkbox = document.getElementById('drop-remove');
    var calendarEl = document.getElementById('calendar');

    // initialize the external events
    // -----------------------------------------------------------------

    new Draggable(containerEl, {
      itemSelector: '.external-event',
      eventData: function(eventEl) {
        console.log(eventEl);
        return {
          title: eventEl.innerText,
          backgroundColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
          borderColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
          textColor: window.getComputedStyle( eventEl ,null).getPropertyValue('color'),
        };
      }
    });

    var calendar = new Calendar(calendarEl, {
      plugins: [ 'bootstrap', 'interaction', 'dayGrid', 'timeGrid' ],
	  locale: 'fr',
    timeZone: 'Europe/Paris',
      header    : {
        left  : 'prev,next today',
        center: 'title',
        right : 'dayGridMonth,timeGridWeek,timeGridDay'
      },
	  buttonText: {
		  today: 'Aujourd\'hui',
		  month: 'Mois',
      day: 'Jour',
		  week: 'Semaine'
	  },
      //Random default events
      events    : {{ data|raw }},
      editable  : true,
      droppable : true, // this allows things to be dropped onto the calendar !!!
      drop      : function(info) {
        // is the "remove after drop" checkbox checked?
        if (checkbox.checked) {
          // if so, remove the element from the "Draggable Events" list
          info.draggedEl.parentNode.removeChild(info.draggedEl);
        }
      }    
    });

    calendar.render();
    // $('#calendar').fullCalendar()

    /* ADDING EVENTS */
    var currColor = '#3c8dbc' //Red by default
    //Color chooser button
    var colorChooser = $('#color-chooser-btn')
    $('#color-chooser > li > a').click(function (e) {
      e.preventDefault()
      //Save color
      currColor = $(this).css('color')
      //Add color effect to button
      $('#add-new-event').css({
        'background-color': currColor,
        'border-color'    : currColor
      })
    })
    $('#add-new-event').click(function (e) {
      e.preventDefault()
      //Get value and make sure it is not null
      var val = $('#new-event').val()
      if (val.length == 0) {
        return
      }

      //Create events
      var event = $('<div />')
      event.css({
        'background-color': currColor,
        'border-color'    : currColor,
        'color'           : '#fff'
      }).addClass('external-event')
      event.html(val)
      $('#external-events').prepend(event)

      //Add draggable funtionality
      ini_events(event)

      //Remove event from text input
      $('#new-event').val('')
    })
  })
</script>
<!-- End Calendrier -->
{% endblock %}