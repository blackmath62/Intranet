{% extends 'base.html.twig' %}

{% block title %}
	{{ title }}
{% endblock %}

{% block body %}
	<div class="btn-group mb-2 text-center col-12">
		<a href="{{ path('app_mouv_stock') }}" class="text-white btn btn-primary col-6">
			<i class="fa fa-plus mr-2"></i>Nouvelle Empl.
		</a>
		<a href="{{ path('app_search_products')}}" class="text-white btn btn-secondary col-6">
			<i class="fa-solid fa-magnifying-glass mr-2"></i>
		</i>Rech. prod.
	</a>
</div>
<!-- general form elements disabled -->
<div class="card card-navy">
	<div class="card-header d-flex">
		<h3 class="card-title">Régularisation de stock</h3>
		<a href="{{ path('app_mouv_stock_emplacement_ns') }}" class="badge badge-danger ml-auto">Non soumis</a>
	</div>
	<!-- /.card-header -->
	<div class="card-body">
		{{ form_start(form, { 'attr' : { 'class' : 'ml-auto' }}) }}
		<div class="form-group">
			<label class="col-form-label">
				<i class="fas fa-map-marker-alt"></i>
				Emplacement
			</label>
			<div class="input-group">
				<div class="input-group-prepend">
					<button id="btn-emplacement" class="btn btn-warning" type="button" data-toggle="modal" data-target="#scannerModal" data-target-id="emplacement">
						<i class="fa-solid fa-camera"></i>
					</button>
				</div>
				{{ form_widget(form.emplacement, {'id': 'emplacement', 'name': 'emplacement' ,'attr' : { 'class' : 'form-control col-12' , 'value' : emplacement} }) }}
				{{ form_errors(form.emplacement) }}
			</div>
		</div>
		<div class="form-group mt-2">
			<label class="col-form-label" for="ean">
				<i class="fas fa-barcode"></i>
				{{ form_label(form.ean) }}
			</label>
			<div class="input-group">
				<div class="input-group-prepend">
					<button id="btn-ean" class="btn btn-warning" type="button" data-toggle="modal" data-target="#scannerModal" data-target-id="ean">
						<i class="fa-solid fa-camera"></i>
					</button>
				</div>
				{{ form_widget(form.ean, { 'id': 'ean', 'name': 'ean' , 'attr' : { 'class' : 'form-control col-12 is-warning' } }) }}
				{{ form_errors(form.ean) }}
				<div class="input-group-append">
					<button class="btn btn-secondary" type="button" id="openProductsModal">
						<i class="fa-solid fa-magnifying-glass"></i>
					</button>
				</div>
			</div>
			<div class="form-check form-check-lg mt-2">
				<input class="form-check-input" type="checkbox" id="openProductsCheckbox" checked>
				<label class="form-check-label" for="openProductsCheckbox">
					Uniquement les articles ouverts
				</label>
			</div>
			<div class="form-check form-check-lg mt-2">
				<input class="form-check-input" type="checkbox" id="openProductsStockCheckbox" checked>
				<label class="form-check-label" for="openProductsStockCheckbox">
					Uniquement les articles en stock
				</label>
			</div>
		</div>
		<div class="form-group mt-2">
			<label class="col-form-label" for="oldLocation">
				<i class="fa-solid fa-right-left"></i>
				{{ form_label(form.oldLocation) }}
			</label>
			{{ form_widget(form.oldLocation, {'attr': {'disabled': true}}) }}
			<small>Déplacer le stock d'un autre emplacement ou ajouter/retirer la quantité sur cet emplacement</small>
			{{ form_errors(form.oldLocation) }}
		</div>
		<div class="form-group mt-2">
			<label class="col-form-label" for="qte">
				<i class="fa-solid fa-calculator"></i>
				{{ form_label(form.qte) }}
			</label>
			{{ form_widget(form.qte, {'id': 'qte', 'type': 'number', 'attr': {'class': 'form-control col-12', 'step': '0.001', 'min': '0'}}) }}
			{{ form_errors(form.qte) }}
		</div>
	</div>
	<div class='card-footer'>
		{{ form_row(form.save, {'attr' : { 'class' : 'btn btn-xl btn-warning col-12' } }) }}
		{{ form_end(form)}}
	</div>
	<!-- /.card -->
</div>
<!-- /.card-body -->
{% include 'components/product_card.html.twig' %}
{% include 'components/product_card_light.html.twig' %}
{% include 'components/modal_scanner.html.twig' %}
{% include 'components/modal_products.html.twig' %}
{% include 'components/modal_generique.html.twig' %}

{% if historiques %}
	<div class="card card-dark mt-4">
		<div class="card-header">
			<h3 class="card-title">Actuellement sur cet emplacement</h3>
		</div>
		<!-- /.card-header -->
		<div class="card-body p-0">
			<table class="table table-sm">
				<thead>
					<tr>
						<th style="width: 60px">Qte</th>
						<th>Produit</th>
						<th style="width: 40px">X</th>
					</tr>
				</thead>
				<tbody>
					{% for historique in historiques %}
						<tr>
							<td>{{ historique.qte }}</td>
							<td>{{ historique.designation }}</td>
							<td class="text-align align-middle">
								<a data-toggle="modal" data-target={{"#modal-sm#{historique.id}"}} class="text-dark">
									<i class="fas fa-trash-alt"></i>
								</a>
								<div class="modal fade" id={{"modal-sm#{historique.id}"}}>
									<div class="modal-dialog modal-sm">
										<div class="modal-content">
											<div class="modal-header">
												<h4 class="modal-title">Voulez vous vraiment supprimer cette ligne ?</h4>
												<button type="button" class="close" data-dismiss="modal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="card-footer p-0">
												<ul class="nav flex-column">
													<li class="nav-item">
														<small class="nav-link">
															Id :
															<span class="float-right">{{ historique.id }}</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Ean :
															<span class="float-right">{{ historique.ean }}</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Référence :
															<span class="float-right">{{historique.ref}}</span>
														</small>
													</li>
													{% if historique.sref1 %}
														<li class="nav-item">
															<small class="nav-link">
																Sref1 :
																<span class="float-right">{{historique.sref1}}</span>
															</small>
														</li>
													{% endif %}
													{% if historique.sref2 %}
														<li class="nav-item">
															<small class="nav-link">
																Sref2 :
																<span class="float-right">{{historique.sref2}}</span>
															</small>
														</li>
													{% endif %}
													<li class="nav-item">
														<small class="nav-link">
															Désignation :
															<span class="float-right">{{historique.designation}}</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Unité de vente :
															<span class="float-right">{{historique.uv}}</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Ancien emplacement :
															<span class="float-right">
																{% if historique.oldLocation != 'Add' and  historique.oldLocation != 'Remove' %}
																	{{historique.oldLocation}}
																{% elseif historique.oldLocation == 'Add' %}
																	Produit retrouvé sans emplacement
																{% elseif historique.oldLocation == 'Remove' %}
																	Produit a retirer de
																	{{historique.emplacement}}
																{% endif %}
															</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Quantité :
															<span class="float-right">{{historique.qte}}</span>
														</small>
													</li>
													<li class="nav-item">
														<small class="nav-link">
															Nouvel emplacement :
															<span class="float-right">
																{% if historique.oldLocation == 'Remove' %}
																	{% else %}
																		{{historique.emplacement}}
																{% endif %}
															</span>
														</small>
													</li>
												</ul>
											</div>
											<div class="modal-footer justify-content-between">
												<button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
												<a href="{{path('app_mouv_stock_emplacement_delete_id', {'id' : historique.id, 'emplacement' : app.request.attributes.get('emplacement') })}}" type="button" class="btn btn-danger">Supprimer cette ligne</a>
											</div>
										</div>
										<!-- /.modal-content -->
									</div>
									<!-- /.modal-dialog -->
								</div>
								<!-- /.modal -->
							</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
		<!-- /.card-body -->
	</div>
	<!-- /.card -->

	<a data-toggle="modal" data-target="#modal-sm-supprimer" class="text-white btn btn-danger col-12">Supprimer cette saisie définitivement</a>
	<div class="modal fade" id="modal-sm-supprimer">
		<div class="modal-dialog modal-sm">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">Voulez vous vraiment supprimer intégralement et définitivement cet emplacement
						{{app.request.attributes.get('emplacement')}}
						?</h4>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-footer justify-content-between">
					<button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
					<a href="{{path('app_mouv_stock_emplacement_delete_all', {'emplacement' : app.request.attributes.get('emplacement') })}}" type="button" class="btn btn-danger">Supprimer</a>
				</div>
			</div>
			<!-- /.modal-content -->
		</div>
		<!-- /.modal-dialog -->
	</div>
	<!-- /.modal -->
{% endif %}{% endblock %}{% block javascripts %}
{{ parent() }}<script src="https://unpkg.com/html5-qrcode"></script>
<script src="{{ asset("js/html5-qrcode.min.js")}}"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>{{ productFormScript | raw }}</script>
<script>{{ eanScannerScript | raw }}</script>

<script>

	// Déclarer oldLocationValue en dehors de la fonction de gestionnaire d'événements
var oldLocationValue;
var isAlimSourceExecuted = false;

function alimSource(stockData) {
if (isAlimSourceExecuted) {
return; // Sortir de la fonction si elle a déjà été exécutée
}isAlimSourceExecuted = true;
// Marquer que la fonction est en cours d'exécution

// Supprimer toutes les options actuelles du champ oldLocation
$('#alimentation_emplacement_ean_oldLocation').empty();
$('#alimentation_emplacement_ean_oldLocation').prop('disabled', true);

// Ajouter l'option 'Ajouter' avec la valeur 'Add'
$('#alimentation_emplacement_ean_oldLocation').append($('<option>', {
value: 'Add',
text: 'Ajouter au stock'
}));

// Ajouter l'option 'Retirer' avec la valeur 'Remove'
$('#alimentation_emplacement_ean_oldLocation').append($('<option>', {
value: 'Remove',
text: 'Retirer du stock'
}));

// Vérifier si stockData est un tableau valide
if (stockData && Array.isArray(stockData) && stockData.length > 0) { // Créer un tableau de promesses pour les requêtes AJAX
const ajaxPromises = stockData.map(stockRow => {
return $.ajax({
url: '/mouv/stock/already/scan/ajax/' + stockRow.ean + '/' + stockRow.empl,
method: 'GET',
dataType: 'json' // Assurez-vous que le serveur renvoie du JSON
}).then(data => { // Log pour vérifier les données reçues

const qte = data.qteAlreadyScanned || 0;
// Utilisez une valeur par défaut si qteAlreadyScanned n'est pas défini

// Ajouter l'option avec la quantité scannée
stockRow.qteStock = parseFloat(stockRow.qteStock) + parseFloat(qte);

if (stockRow.qteStock !== 0) {
$('#alimentation_emplacement_ean_oldLocation').append($('<option>', {
value: stockRow.empl,
text: 'Déplacer de ' + stockRow.empl + ' - ' + stockRow.qteStock + ' - ' + stockRow.natureStock + ' Disponible',
'data-qte': stockRow.qteStock // Stockez la quantité comme attribut de données
}));
}
}).catch(error => {
console.error('Erreur lors de la récupération de la quantité déjà scannée pour ' + stockRow.empl + ':', error);

// Ajouter une option avec 0 en cas d'erreur
$('#alimentation_emplacement_ean_oldLocation').append($('<option>', {
value: stockRow.empl,
text: 'Déplacer de ' + stockRow.empl + ' - ' + stockRow.qteStock + ' - ' + stockRow.natureStock + ' Disponible',
'data-qte': stockRow.qteStock // Stockez la quantité comme attribut de données
}));
});
});

// Attendre que toutes les requêtes AJAX soient terminées avant d'activer le champ oldLocation
Promise.all(ajaxPromises).then(() => {
$('#alimentation_emplacement_ean_oldLocation').prop('disabled', false);
isAlimSourceExecuted = false; // Réinitialiser le drapeau après l'exécution
loadModal()
}).catch(error => {
console.error('Erreur lors de l\'attente des requêtes AJAX:', error);
isAlimSourceExecuted = false; // Réinitialiser le drapeau en cas d'erreur
});
} else {
$('#alimentation_emplacement_ean_oldLocation').prop('disabled', false);
isAlimSourceExecuted = false; // Réinitialiser le drapeau si aucune donnée à traiter
loadModal()
}
}
function loadModal() {
const selectOptions = Array.from(document.getElementById('alimentation_emplacement_ean_oldLocation').options);
const options = selectOptions.map(option => ({value: option.value, text: option.text}));
populateModalOptions(options);
openModal();
}

// Ajouter un gestionnaire d'événements pour le changement de la valeur du champ oldLocation
$('#alimentation_emplacement_ean_oldLocation').on('change', function () {
var selectedOption = $(this).find(':selected');
oldLocationValue = selectedOption.val(); // Définir la valeur de oldLocationValue
var qteInput = $('#qte');
// Récupérer la quantité stockée dans l'attribut de données
var qteEmplacement = parseFloat(selectedOption.data('qte'));

if (!isNaN(qteEmplacement)) { // Extraire la quantité de l'emplacement
qteInput.val(qteEmplacement);
qteInput.attr('max', qteEmplacement);
// qteInput.addClass('disabled');
} else { // Réactiver le champ qte si la valeur est 'Add'
qteInput.removeClass('disabled');
qteInput.val("");
qteInput.removeAttr('max');
document.getElementById('qte').focus();
}
});
</script>
<script>
	// Définition des fonctions
function openModal() {
const overlay = document.querySelector('#generiqueModal .overlay');
if (overlay) {
overlay.style.display = 'none';
}
$('#generiqueModal').modal('show');
}

function populateModalOptions(options) {
const modalBody = document.querySelector('#generiqueModal .modal-body');
document.querySelector('#generiqueModal .generique-title').textContent = 'Ajouter/Retirer/Déplacer du stock ?';
modalBody.innerHTML = '';

options.forEach(option => {
const radioHtml = `
            <div class="form-check my-3">
                <input class="form-check-input" type="radio" name="modalOption" id="option-${
option.value
}" value="${
option.value
}">
                <label class="form-check-label ml-2" style="font-size: 1.25rem;" for="option-${
option.value
}">
                    ${
option.text
}
                </label>
            </div>
        `;
modalBody.insertAdjacentHTML('beforeend', radioHtml);
});

document.getElementById('btn-send').classList.remove('d-none');
document.getElementById('btn-send').addEventListener('click', function () {
const selectedOption = modalBody.querySelector('input[name="modalOption"]:checked');
if (selectedOption) {
const value = selectedOption.value;
const selectElement = document.getElementById('alimentation_emplacement_ean_oldLocation');
selectElement.value = value;
$('#generiqueModal').modal('hide');
$('#alimentation_emplacement_ean_oldLocation').trigger('change');
}
});
}

// Initialisation après le chargement du DOM
document.addEventListener('DOMContentLoaded', function () {

function handleFocusChange(event) {
const emplacement = document.getElementById('emplacement');
const ean = document.getElementById('ean');
const oldLocation = document.getElementById('alimentation_emplacement_ean_oldLocation');
const qte = document.getElementById('qte');

if (emplacement.classList.contains('is-valid') && ! ean.classList.contains('is-valid')) {
ean.focus();
}
}

const observerConfig = {
attributes: true,
attributeFilter: ['class']
};

const emplacement = document.getElementById('emplacement');
const ean = document.getElementById('ean');
const oldLocation = document.getElementById('alimentation_emplacement_ean_oldLocation');

const emplacementObserver = new MutationObserver(handleFocusChange);
const eanObserver = new MutationObserver(handleFocusChange);
const oldLocationObserver = new MutationObserver(handleFocusChange);

emplacementObserver.observe(emplacement, observerConfig);
eanObserver.observe(ean, observerConfig);
oldLocationObserver.observe(oldLocation, observerConfig);
});
</script>{% endblock %}
